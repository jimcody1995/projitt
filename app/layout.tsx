import { JSX, ReactNode, Suspense } from 'react';
import localFont from 'next/font/local';
import { cn } from '@/lib/utils';
import { SettingsProvider } from '@/providers/settings-provider';
import { TooltipsProvider } from '@/providers/tooltips-provider';
import { Toaster } from '@/components/ui/sonner';
import '@/css/styles.css';
import '@/components/keenicons/assets/styles.css';
import { Metadata } from 'next';
import { QueryProvider } from '@/providers/query-provider';
import { ThemeProvider } from '@/providers/theme-provider';
import { SessionProvider } from '@/context/SessionContext';
import { BasicContextProvider } from '@/context/BasicContext';
import 'react-quill-new/dist/quill.snow.css';
import '@/app/globals.css';
import { StructuredData } from '@/app/components/seo/structured-data';
import { WebVitals } from '@/app/components/seo/web-vitals';
import { PreconnectLinks } from '@/app/components/seo/preconnect-links';

const Inter = localFont({
  src: [
    {
      path: './fonts/Inter-Regular.ttf',
      weight: '400',
      style: 'normal',
    },
    {
      path: './fonts/Inter-Bold.ttf',
      weight: '700',
      style: 'normal',
    },
  ],
  display: 'swap',
});

/**
 * Metadata for the root layout.
 */
export const metadata: Metadata = {
  metadataBase: new URL(process.env.NEXT_PUBLIC_BASE_URL || 'https://projitt.com'),
  title: {
    default: 'Projitt',
    template: '%s | Projitt',
  },
  description: 'Generated by create next app',
  keywords: ['HR management', 'recruitment', 'payroll', 'employee management', 'talent management', 'HRMS', 'human resources'],
  authors: [{ name: 'Projitt' }],
  creator: 'Projitt',
  publisher: 'Projitt',
  formatDetection: {
    email: false,
    address: false,
    telephone: false,
  },
  openGraph: {
    type: 'website',
    locale: 'en_US',
    url: '/',
    siteName: 'Projitt',
    title: 'Projitt',
    description: 'Generated by create next app',
    images: [
      {
        url: '/images/logo.png',
        width: 1200,
        height: 630,
        alt: 'Projitt HR Management System',
      },
    ],
  },
  twitter: {
    card: 'summary_large_image',
    title: 'Projitt',
    description: 'Generated by create next app',
    images: ['/images/logo.png'],
  },
  robots: {
    index: true,
    follow: true,
    googleBot: {
      index: true,
      follow: true,
      'max-video-preview': -1,
      'max-image-preview': 'large',
      'max-snippet': -1,
    },
  },
  verification: {
    // Add your verification tokens here
    // google: 'your-google-verification-code',
    // yandex: 'your-yandex-verification-code',
    // bing: 'your-bing-verification-code',
  },
};

/**
 * RootLayout component wraps the application with essential providers
 * for session, query management, settings, theme, tooltips and displays
 * the global Toaster notifications.
 *
 * @param {Object} props
 * @param {ReactNode} props.children - The children components to render within the layout
 * @returns JSX.Element - The root layout including html and body tags with providers
 */
export default async function RootLayout({
  children,
}: {
  children: ReactNode;
}): Promise<JSX.Element> {
  return (
    <html className="h-full" suppressHydrationWarning lang="en">
      <head>
        <PreconnectLinks />
        <StructuredData />
        <link rel="preload" href="/fonts/Inter-Regular.ttf" as="font" type="font/ttf" crossOrigin="anonymous" />
        <link rel="preload" href="/fonts/Inter-Bold.ttf" as="font" type="font/ttf" crossOrigin="anonymous" />
      </head>
      <body
        className={cn(
          'antialiased flex h-full text-base text-foreground bg-background',
          Inter.className
        )}
      >
        <WebVitals />
        <SessionProvider>
          <BasicContextProvider>
            <QueryProvider>
              <SettingsProvider>
                <ThemeProvider>
                  <TooltipsProvider>
                    <Suspense>{children}</Suspense>
                    <Toaster />
                  </TooltipsProvider>
                </ThemeProvider>
              </SettingsProvider>
            </QueryProvider>
          </BasicContextProvider>
        </SessionProvider>
      </body>
    </html>
  );
}
